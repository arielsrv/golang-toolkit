# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
version: '3'

env:
  COVERAGE_FOLDER: coverage

tasks:
  lint:
    desc: Use golangci-lint (.golangci.yml).
    cmds:
      - golangci-lint run --fix $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values("./" + . + "/...")[]')
  test:
    desc: Run test.
    cmds:
      - go test $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values("./" + . + "/...")[]')
  coverage:
    desc: Makes report coverage.
    cmds:
      - go test $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values("./" + . + "/...")[]') -covermode=count -coverprofile=coverage.out
      - go tool cover -html coverage.out -o coverage.html
      - go tool cover -func=coverage.out -o=coverage.out
  download:
    desc: Run go mod tidy.
    cmds:
      - go work sync
      - for f in $(find . -name go.mod); do (cd $(dirname $f); go mod tidy) ; done
  upgrade:
    desc: Check for latest direct dependencies.
    cmds:
      - go-mod-upgrade
  build:
    desc: Build the go binary.
    generates:
      - app
    interactive: true
    cmds:
      - go build -v $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values("./" + . + "/...")[]')

  all:
    desc: Run relevant tasks.
    cmds:
      - task: download
      - task: lint
      - task: test
      - task: coverage
      - task: build
  default:
    desc: Run [build] task.
    cmds:
      - task: build
  run:
    desc: Run main.go.
    cmds:
      - echo '{{OS}}'
      - ./$OUTPUT_FOLDER/$EXECUTABLE